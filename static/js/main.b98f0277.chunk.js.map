{"version":3,"sources":["components/Scenario.js","utils/SocketListener.js","utils/KeyListener.js","components/Players.js","components/Fruits.js","components/Scene.js","components/Camera.js","components/Soundtrack.js","components/GUI.js","Game.js","App.js","serviceWorker.js","services/state.js","index.js"],"names":["Scenario","state","geometry","BoxBufferGeometry","material","MeshStandardMaterial","color","cube","Mesh","receiveShadow","light","HemisphereLight","scene","add","position","set","socket","io","forceNew","autoConnect","movePlayer","direction","emit","observer","join","console","log","id","useEffect","on","update","players","map","player","current","updatePlayers","updateFruits","fruits","playable","started","window","addEventListener","e","keyCode","playersGroup","Group","name","children","child","key","splice","Color","castShadow","x","y","z","transparent","opacity","fruitsGroup","fruit","Scene","THREE","bg","load","background","canvas","document","createElement","context","getContext","alpha","renderer","shadowMap","enabled","type","setSize","innerWidth","innerHeight","domElement","style","querySelector","appendChild","composer","EffectComposer","animate","requestAnimationFrame","render","renderPass","RenderPass","camera","addPass","Camera","aspect","OrthographicCamera","lookAt","directionalLight","DirectionalLight","target","Object3D","PointLight","shadow","bias","mapSize","width","height","useState","loaded","setLoaded","audioLoader","AudioLoader","listener","AudioListener","setSoundtrack","Audio","soundtrack","buffer","setBuffer","setLoop","setVolume","play","suspend","resume","status","setStatus","className","points","onClick","pause","src","alt","menu","useRef","menuFadeOut","display","setPlayable","onload","ref","href","rel","setStart","Boolean","location","hostname","match","State","currentPlayer","arr","this","value","decorate","observable","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b98f0277.chunk.js","sourcesContent":["import {\n\tBoxBufferGeometry,\n\tMesh,\n\tMeshStandardMaterial,\n\tHemisphereLight\n} from \"three\";\n\nexport default function Scenario({ state }) {\n\t// Set the scenario cube\n\tconst geometry = new BoxBufferGeometry(20, 20, 20);\n\tconst material = new MeshStandardMaterial({ color: 0x0d5666 });\n\tconst cube = new Mesh(geometry, material);\n\tcube.receiveShadow = true;\n\n\t// Set a hemisphere light\n\tconst light = new HemisphereLight(0xffffbb, 0x080820, 0.6);\n\tstate.scene.add(light);\n\n\t// Set Scenario cube position\n\tcube.position.set(9.5, 9.5, -10.5);\n\n\tstate.scene.add(cube);\n\treturn null;\n}\n","import { useEffect } from \"react\";\nimport { observer } from \"mobx-react\";\nimport io from \"socket.io-client\";\n\n// Generate a socket.io instance\nconst socket = io(\"https://192.81.217.9/frutinhas\", {\n\tforceNew: true,\n\tautoConnect: true,\n});\n\nfunction SocketListener({ state }) {\n\t// Set a new player on server\n\tfunction join() {\n\t\tconsole.log(\"Welcome to Frutinhas 3D!\");\n\t\tconsole.log(\"You joined with ID:\", socket.id);\n\t\tsocket.emit(\"addPlayer\");\n\t}\n\n\t// Update state for players and fruits\n\tuseEffect(() => {\n\t\tsocket.on(\"update\", (update) => {\n\t\t\tupdate.players.map((player) => {\n\t\t\t\tif (player.id === socket.id) player.current = true;\n\t\t\t});\n\t\t\tstate.updatePlayers(update.players);\n\t\t\tstate.updateFruits(update.fruits);\n\t\t});\n\t\t// eslint-disable-next-line\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif (state.playable && state.started) {\n\t\t\t// Set new player on reconnect\n\t\t\tsocket.on(\"welcome\", () => {\n\t\t\t\tjoin();\n\t\t\t});\n\t\t\t// Set new player on game start\n\t\t\tjoin();\n\t\t}\n\t\t// eslint-disable-next-line\n\t}, [state.started, state.playable]);\n\n\treturn null;\n}\n\n// Tell server to move the current player\nexport function movePlayer(direction) {\n\tsocket.emit(\"movePlayer\", direction);\n}\n\nexport default observer(SocketListener);\n","import { movePlayer } from \"./SocketListener\";\nimport { useEffect } from \"react\";\nimport { observer } from \"mobx-react\";\n\nfunction KeyListener({ state }) {\n\tuseEffect(() => {\n\t\tif (state.playable && state.started) {\n\t\t\tconsole.log(\"Starting Key Listener...\");\n\t\t\t// Starts Key Listener\n\t\t\twindow.addEventListener(\"keydown\", e => {\n\t\t\t\tswitch (e.keyCode) {\n\t\t\t\t\tcase 87:\n\t\t\t\t\t\tmovePlayer(\"w\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 65:\n\t\t\t\t\t\tmovePlayer(\"a\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 68:\n\t\t\t\t\t\tmovePlayer(\"d\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 83:\n\t\t\t\t\t\tmovePlayer(\"s\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}, [state.started, state.playable]);\n\n\treturn null;\n}\n\nexport default observer(KeyListener);\n","import {\n\tBoxBufferGeometry,\n\tMeshStandardMaterial,\n\tMesh,\n\tGroup,\n\tColor\n} from \"three\";\nimport { observer } from \"mobx-react\";\n\nfunction Players({ state }) {\n\t// Set player geometry\n\tconst geometry = new BoxBufferGeometry(1, 1, 1);\n\n\t// Set Players Group\n\tconst playersGroup = new Group();\n\tplayersGroup.name = \"Players\";\n\n\tif (state.players) {\n\t\t// Remove group from scene\n\t\tstate.scene.children.map((child, key) => {\n\t\t\tif (child.name === playersGroup.name) state.scene.children.splice(key, 1);\n\t\t\treturn null;\n\t\t});\n\n\t\t// Clear players group\n\t\tplayersGroup.children = [];\n\t\tstate.players.map(player => {\n\t\t\t// Set a new material with player color\n\t\t\tconst material = new MeshStandardMaterial({\n\t\t\t\tcolor: new Color(player.color)\n\t\t\t});\n\t\t\tconst cube = new Mesh(geometry, material);\n\t\t\tcube.name = player.id;\n\t\t\tcube.castShadow = true;\n\t\t\tcube.position.set(player.x, player.y, player.z);\n\t\t\tif (player.current) {\n\t\t\t\tcube.name = \"currentPlayer\";\n\t\t\t} else {\n\t\t\t\tcube.name = player.id;\n\t\t\t}\n\t\t\tplayersGroup.add(cube);\n\t\t\treturn null;\n\t\t});\n\t\t// Render players\n\t\tstate.scene.add(playersGroup);\n\t}\n\n\treturn null;\n}\n\nexport default observer(Players);\n","import { BoxBufferGeometry, MeshStandardMaterial, Mesh, Group } from \"three\";\nimport { observer } from \"mobx-react\";\n\nfunction Fruits({ state }) {\n\t// Set fruit geometry and material --> COLOR IS HERE\n\tconst geometry = new BoxBufferGeometry(0.9, 0.9, 0.9);\n\tconst material = new MeshStandardMaterial({\n\t\tcolor: 0x0fb7db\n\t});\n\tmaterial.transparent = true;\n\tmaterial.opacity = 0.8;\n\n\t// Fruits Group\n\tconst fruitsGroup = new Group();\n\tfruitsGroup.name = \"Fruits\";\n\n\tif (state.fruits) {\n\t\t// Remove group from scene\n\t\tstate.scene.children.map((child, key) => {\n\t\t\tif (child.name === fruitsGroup.name) state.scene.children.splice(key, 1);\n\t\t\treturn null;\n\t\t});\n\n\t\t// Clear fruits group\n\t\tfruitsGroup.children = [];\n\t\t// Create new fruit and add do fruits group\n\t\tstate.fruits.map(fruit => {\n\t\t\tconst cube = new Mesh(geometry, material);\n\t\t\tcube.castShadow = true;\n\t\t\tcube.position.set(fruit.x, fruit.y, fruit.z);\n\t\t\treturn fruitsGroup.add(cube);\n\t\t});\n\t\t// Render fruits\n\t\tstate.scene.add(fruitsGroup);\n\t}\n\n\treturn null;\n}\n\nexport default observer(Fruits);\n","import React, { useEffect } from \"react\";\nimport * as THREE from \"three\";\nimport { EffectComposer } from \"three/examples/jsm/postprocessing/EffectComposer.js\";\nimport { RenderPass } from \"three/examples/jsm/postprocessing/RenderPass.js\";\n\nexport default function Scene({ children, state }) {\n\t// Set a new scene\n\tstate.scene = new THREE.Scene();\n\n\t// Set scene background\n\tconst bg = new THREE.TextureLoader().load(\"./background.png\");\n\tstate.scene.background = bg;\n\n\t// Generate a webgl2 Canvas\n\tconst canvas = document.createElement(\"canvas\");\n\tconst context = canvas.getContext(\"webgl2\", { alpha: false });\n\t// Set webgl2 renderer\n\tstate.renderer = new THREE.WebGLRenderer({\n\t\tcanvas: canvas,\n\t\tcontext: context,\n\t});\n\t// Enable shadows\n\tstate.renderer.shadowMap.enabled = true;\n\tstate.renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n\t// Some renderer configs\n\tstate.renderer.setSize(window.innerWidth, window.innerHeight);\n\tstate.renderer.domElement.style.position = \"absolute\";\n\tdocument.querySelector(\"#root\").appendChild(state.renderer.domElement);\n\n\t// Set a composer for postprocessing\n\tconst composer = new EffectComposer(state.renderer);\n\tcomposer.setSize(window.innerWidth, window.innerHeight);\n\n\t// Game loop\n\tfunction animate() {\n\t\trequestAnimationFrame(animate);\n\t\tcomposer.render();\n\t}\n\n\t// Render pass config and game loop start\n\tuseEffect(() => {\n\t\tvar renderPass = new RenderPass(state.scene, state.camera);\n\t\tcomposer.addPass(renderPass);\n\t\tanimate();\n\t});\n\n\treturn <>{children}</>;\n}\n","import {\n\tOrthographicCamera,\n\tDirectionalLight,\n\tObject3D,\n\tPointLight\n} from \"three\";\n\nexport default function Camera({ state }) {\n\tlet aspect = window.innerWidth / window.innerHeight;\n\tlet d = 20;\n\n\t// Ortographic Camera\n\tstate.camera = new OrthographicCamera(\n\t\t-d * aspect,\n\t\td * aspect,\n\t\td,\n\t\t-d,\n\t\t1,\n\t\t2000\n\t);\n\n\t// Set camera position and make it isometric\n\tstate.camera.position.set(40, 40, 20);\n\tstate.camera.lookAt(10, 10, -10);\n\n\t// Set directional light and point it to center\n\tconst directionalLight = new DirectionalLight(0xffffff, 0.5);\n\tdirectionalLight.position.set(30, 30, 10);\n\tconst target = new Object3D();\n\ttarget.position.set(10, 10, -10);\n\tdirectionalLight.target = target;\n\n\t// PointLight to cast shadows\n\tconst light = new PointLight(0xffffff, 1.5, 100);\n\tlight.castShadow = true;\n\tlight.position.set(40, 40, 20);\n\tlight.shadow.bias = 0.0001;\n\tlight.shadow.mapSize.width = 2048;\n\tlight.shadow.mapSize.height = 2048;\n\n\tstate.scene.add(directionalLight, target, light);\n\n\treturn null;\n}\n","import { observer } from \"mobx-react\";\nimport { AudioListener, Audio, AudioLoader } from \"three\";\nimport { useEffect, useState } from \"react\";\n\nfunction Soundtrack({ state }) {\n\tconst [loaded, setLoaded] = useState(false);\n\t// Set Audio loader and listener\n\tconst audioLoader = new AudioLoader();\n\tconst listener = new AudioListener();\n\n\t// Set state Audio (soundtrack)\n\tuseEffect(() => {\n\t\tstate.camera.add(listener);\n\t\tstate.setSoundtrack(new Audio(listener));\n\t\t// eslint-disable-next-line\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif (state.soundtrack && !loaded) {\n\t\t\t// Load soundtrack file\n\t\t\taudioLoader.load(\"./Disconnected.mp3\", function(buffer) {\n\t\t\t\tstate.soundtrack.setBuffer(buffer);\n\t\t\t\tstate.soundtrack.setLoop(true);\n\t\t\t\tstate.soundtrack.setVolume(0.5);\n\t\t\t\tstate.soundtrack.play();\n\t\t\t\tconsole.log(\"Soundtrack loaded!\");\n\t\t\t\tlistener.context.suspend();\n\t\t\t\tsetLoaded(true);\n\t\t\t});\n\t\t}\n\t\t// eslint-disable-next-line\n\t}, [loaded]);\n\n\t// Play soundtrack on game starts\n\tif (state.started && loaded) listener.context.resume();\n\n\treturn null;\n}\n\nexport default observer(Soundtrack);\n","import React, { useState } from \"react\";\nimport { observer } from \"mobx-react\";\n\nfunction GUI({ state }) {\n\tconst [status, setStatus] = useState(true);\n\n\tfunction muteMusic() {\n\t\tstate.soundtrack.pause();\n\t\tsetStatus(false);\n\t}\n\tfunction playMusic() {\n\t\tstate.soundtrack.play();\n\t\tsetStatus(true);\n\t}\n\n\treturn (\n\t\t<div className=\"gui\">\n\t\t\t<div className=\"api\">\n\t\t\t\t<br />\n\t\t\t\t{/* Show players list */}\n\t\t\t\t{state.players &&\n\t\t\t\t\tstate.players.map((player, key) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div style={{ color: player.color }} key={key}>\n\t\t\t\t\t\t\t\t<b>\n\t\t\t\t\t\t\t\t\t{player.id}: {player.points}\n\t\t\t\t\t\t\t\t</b>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t</div>\n\t\t\t<div className=\"controls\">\n\t\t\t\t{state.soundtrack && status ? (\n\t\t\t\t\t<img onClick={muteMusic} src=\"./mute.png\" alt=\"Mute Music\" />\n\t\t\t\t) : (\n\t\t\t\t\t<img onClick={playMusic} src=\"./unmute.png\" alt=\"Play Music\" />\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default observer(GUI);\n","import React from \"react\";\nimport Scenario from \"./components/Scenario\";\nimport KeyListener from \"./utils/KeyListener\";\nimport Players from \"./components/Players\";\nimport SocketListener from \"./utils/SocketListener\";\nimport Fruits from \"./components/Fruits\";\nimport Scene from \"./components/Scene\";\nimport Camera from \"./components/Camera\";\nimport { observer } from \"mobx-react\";\nimport Soundtrack from \"./components/Soundtrack\";\nimport GUI from \"./components/GUI\";\n\nfunction Game({ state }) {\n\treturn (\n\t\t<Scene state={state}>\n\t\t\t<GUI state={state} />\n\t\t\t<Camera state={state} />\n\t\t\t<Soundtrack state={state} />\n\t\t\t<Scenario state={state} />\n\t\t\t<Players state={state} />\n\t\t\t<Fruits state={state} />\n\t\t\t<SocketListener state={state} />\n\t\t\t<KeyListener state={state} />\n\t\t</Scene>\n\t);\n}\n\nexport default observer(Game);\n","import React, { useRef } from \"react\";\nimport \"./App.css\";\n\nimport Game from \"./Game\";\nimport { observer } from \"mobx-react\";\n\nfunction App({ state }) {\n\tconst menu = useRef(null);\n\n\t// Mobile users can't play, just watch\n\tif (window.innerWidth > 900) {\n\t\tstate.setPlayable();\n\t}\n\n\t// FadeOut menu and set started state\n\tfunction startGame() {\n\t\tmenu.current.style.opacity = 1;\n\t\tmenuFadeOut();\n\t\tstate.setStart();\n\t}\n\n\t// FadeOut Menu function\n\tfunction menuFadeOut() {\n\t\tif (menu.current.style.opacity > 0) {\n\t\t\trequestAnimationFrame(menuFadeOut);\n\t\t\tmenu.current.style.opacity -= 0.05;\n\t\t} else {\n\t\t\tmenu.current.style.display = \"none\";\n\t\t}\n\t}\n\n\t// Start start menu animation\n\twindow.onload = () => {\n\t\tdocument.querySelector(\".menu img\").style.display = \"block\";\n\t\tdocument.querySelector(\".menu .title\").style.display = \"block\";\n\t\tdocument.querySelector(\".menu p\").style.display = \"block\";\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<div ref={menu} className=\"menu\">\n\t\t\t\t<h2 className=\"title\">Frutinhas 3D</h2>\n\t\t\t\t<p>\n\t\t\t\t\tpor{\" \"}\n\t\t\t\t\t<a\n\t\t\t\t\t\thref=\"https://sampaioleal.github.io\"\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t>\n\t\t\t\t\t\tSampaio Leal\n\t\t\t\t\t</a>\n\t\t\t\t</p>\n\t\t\t\t<img onClick={startGame} src=\"./play.png\" alt=\"Play button\" />\n\t\t\t</div>\n\t\t\t<Game state={state} />\n\t\t</>\n\t);\n}\n\nexport default observer(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { decorate, observable } from \"mobx\";\n\nclass State {\n\tplayable = false;\n\n\tstarted = false;\n\n\tscene = null;\n\trenderer = null;\n\tcamera = null;\n\n\tsoundtrack = null;\n\n\tcurrentPlayer = null;\n\n\tplayers = null;\n\tfruits = null;\n\n\tupdatePlayers(arr) {\n\t\tthis.players = arr;\n\t}\n\tupdateFruits(arr) {\n\t\tthis.fruits = arr;\n\t}\n\tsetPlayable() {\n\t\tthis.playable = true;\n\t}\n\tsetStart() {\n\t\tthis.started = true;\n\t}\n\tsetSoundtrack(value) {\n\t\tthis.soundtrack = value;\n\t}\n\tsetCurrentPlayer(value) {\n\t\tthis.currentPlayer = value;\n\t}\n}\n\ndecorate(State, {\n\tscene: observable,\n\trenderer: observable,\n\tcamera: observable,\n\tplayers: observable,\n\tfruits: observable,\n\tplayable: observable,\n\tstarted: observable,\n\tsoundtrack: observable,\n\tcurrentPlayer: observable\n});\n\nconst state = (window.state = new State());\n\nexport default state;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport state from \"./services/state\";\n\nReactDOM.render(<App state={state} />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}